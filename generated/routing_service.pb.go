// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/routing_service.proto

/*
Package routing_service is a generated protocol buffer package.

It is generated from these files:
	proto/routing_service.proto

It has these top-level messages:
	Empty
	Address
	Endpoint
	BackendConfig
	RoutingConfig
*/
package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/golang/protobuf/ptypes/struct"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Address struct {
	Port string `protobuf:"bytes,1,opt,name=port" json:"port,omitempty"`
	Ip   string `protobuf:"bytes,2,opt,name=ip" json:"ip,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Address) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Address) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type Endpoint struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Endpoint) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type BackendConfig struct {
	Address   *Address    `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Endpoints []*Endpoint `protobuf:"bytes,2,rep,name=endpoints" json:"endpoints,omitempty"`
}

func (m *BackendConfig) Reset()                    { *m = BackendConfig{} }
func (m *BackendConfig) String() string            { return proto.CompactTextString(m) }
func (*BackendConfig) ProtoMessage()               {}
func (*BackendConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BackendConfig) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *BackendConfig) GetEndpoints() []*Endpoint {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

type RoutingConfig struct {
	Routes []*BackendConfig `protobuf:"bytes,1,rep,name=routes" json:"routes,omitempty"`
}

func (m *RoutingConfig) Reset()                    { *m = RoutingConfig{} }
func (m *RoutingConfig) String() string            { return proto.CompactTextString(m) }
func (*RoutingConfig) ProtoMessage()               {}
func (*RoutingConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RoutingConfig) GetRoutes() []*BackendConfig {
	if m != nil {
		return m.Routes
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "routing.service.Empty")
	proto.RegisterType((*Address)(nil), "routing.service.Address")
	proto.RegisterType((*Endpoint)(nil), "routing.service.Endpoint")
	proto.RegisterType((*BackendConfig)(nil), "routing.service.BackendConfig")
	proto.RegisterType((*RoutingConfig)(nil), "routing.service.RoutingConfig")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoutingService service

type RoutingServiceClient interface {
	// ===== SYSTEM =====
	GetRoutes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RoutingConfig, error)
}

type routingServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoutingServiceClient(cc *grpc.ClientConn) RoutingServiceClient {
	return &routingServiceClient{cc}
}

func (c *routingServiceClient) GetRoutes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*RoutingConfig, error) {
	out := new(RoutingConfig)
	err := grpc.Invoke(ctx, "/routing.service.RoutingService/GetRoutes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoutingService service

type RoutingServiceServer interface {
	// ===== SYSTEM =====
	GetRoutes(context.Context, *Empty) (*RoutingConfig, error)
}

func RegisterRoutingServiceServer(s *grpc.Server, srv RoutingServiceServer) {
	s.RegisterService(&_RoutingService_serviceDesc, srv)
}

func _RoutingService_GetRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingServiceServer).GetRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routing.service.RoutingService/GetRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingServiceServer).GetRoutes(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoutingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routing.service.RoutingService",
	HandlerType: (*RoutingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRoutes",
			Handler:    _RoutingService_GetRoutes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/routing_service.proto",
}

func init() { proto.RegisterFile("proto/routing_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x43, 0x55, 0x90, 0x21, 0x60, 0xb2, 0x24, 0xa4, 0xa2, 0x21, 0xa4, 0x27, 0x2e, 0xb6,
	0x49, 0x4d, 0xf4, 0x2c, 0x86, 0x70, 0x25, 0xeb, 0xc5, 0x9b, 0x59, 0xda, 0xa5, 0xac, 0x7f, 0x76,
	0x37, 0xdb, 0xc1, 0xc4, 0xc4, 0x93, 0xaf, 0xe0, 0xa3, 0xf9, 0x0a, 0x3e, 0x88, 0xe9, 0xee, 0x82,
	0x62, 0x6f, 0x9d, 0x99, 0xdf, 0x7c, 0xdf, 0xd7, 0x1d, 0x38, 0xd3, 0x46, 0xa1, 0x4a, 0x8c, 0xda,
	0xa0, 0x90, 0xc5, 0x43, 0xc9, 0xcd, 0xab, 0xc8, 0x78, 0x6c, 0xbb, 0xe4, 0xc4, 0xb7, 0x63, 0xdf,
	0x1e, 0x9e, 0x17, 0x4a, 0x15, 0xcf, 0x3c, 0x61, 0x5a, 0x24, 0x4c, 0x4a, 0x85, 0x0c, 0x85, 0x92,
	0xa5, 0xc3, 0x77, 0x53, 0x5b, 0x2d, 0x37, 0xab, 0xa4, 0x44, 0xb3, 0xc9, 0xd0, 0x4d, 0xa3, 0x16,
	0x1c, 0xcd, 0x5e, 0x34, 0xbe, 0x45, 0x17, 0xd0, 0xba, 0xc9, 0x73, 0xc3, 0xcb, 0x92, 0x10, 0x38,
	0xd4, 0xca, 0x60, 0xd8, 0x18, 0x37, 0x26, 0x6d, 0x6a, 0xbf, 0x49, 0x0f, 0x02, 0xa1, 0xc3, 0xc0,
	0x76, 0x02, 0xa1, 0xa3, 0x11, 0x1c, 0xcf, 0x64, 0xae, 0x95, 0x90, 0x68, 0x79, 0x86, 0xeb, 0x1d,
	0xcf, 0x70, 0x1d, 0xbd, 0x43, 0x77, 0xca, 0xb2, 0x27, 0x2e, 0xf3, 0x5b, 0x25, 0x57, 0xa2, 0x20,
	0x29, 0xb4, 0x98, 0xd3, 0xb7, 0x5c, 0x27, 0x0d, 0xe3, 0x7f, 0xff, 0x11, 0x7b, 0x7f, 0xba, 0x05,
	0xc9, 0x35, 0xb4, 0xb9, 0x37, 0x29, 0xc3, 0x60, 0x7c, 0x30, 0xe9, 0xa4, 0xa7, 0xb5, 0xad, 0x6d,
	0x0c, 0xfa, 0xcb, 0x46, 0x73, 0xe8, 0x52, 0x87, 0x79, 0xf7, 0x2b, 0x68, 0x56, 0x7b, 0xbc, 0x32,
	0xaf, 0x64, 0x46, 0x35, 0x99, 0xbd, 0xb4, 0xd4, 0xd3, 0xe9, 0x23, 0xf4, 0xbc, 0xd0, 0x9d, 0xe3,
	0xc8, 0x3d, 0xb4, 0xe7, 0x1c, 0xa9, 0x1d, 0x93, 0x41, 0x3d, 0x4d, 0xf5, 0x98, 0xc3, 0xba, 0xfc,
	0x5e, 0x9c, 0xa8, 0xff, 0xf1, 0xf5, 0xfd, 0x19, 0x74, 0x49, 0xc7, 0xde, 0xcc, 0x79, 0x4d, 0x13,
	0x18, 0x08, 0x15, 0x17, 0x46, 0x67, 0xdb, 0x6d, 0xef, 0x39, 0xed, 0x53, 0x25, 0xfe, 0xd4, 0x8b,
	0xea, 0x72, 0x8b, 0xc6, 0xb2, 0x69, 0x4f, 0x78, 0xf9, 0x13, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x8b,
	0x3a, 0x37, 0x2e, 0x02, 0x00, 0x00,
}
